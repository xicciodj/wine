/*
 * Copyright 2025 Vibhav Pant
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
 */

import "unknwn.idl";
import "cor.idl";

[
    local,
    object,
    uuid(d8f579ab-402d-4b8e-82d9-5d63b1065c68)
]
interface IMetaDataTables : IUnknown
{
    HRESULT GetStringHeapSize([out] ULONG *size);

    HRESULT GetBlobHeapSize([out] ULONG *size);

    HRESULT GetGuidHeapSize([out] ULONG *size);

    HRESULT GetUserStringHeapSize([out] ULONG *size);

    HRESULT GetNumTables([out] ULONG *tables);

    HRESULT GetTableIndex([in] ULONG token, [out] ULONG *idx);

    HRESULT GetTableInfo([in] ULONG idx, [out] ULONG *row_size, [out] ULONG *rows, [out] ULONG *cols,
                         [out] ULONG *key_idx, [out, string] const char **name);

    HRESULT GetColumnInfo([in] ULONG idx_tbl, [in] ULONG idx_col, [out] ULONG *offset, [out] ULONG *col_size,
                          [out] ULONG *type, [out, string] const char **name);

    HRESULT GetCodedTokenInfo([in] ULONG type, [out] ULONG *tokens_len, [out] const ULONG **tokens,
                              [out, string] const char **name);

    HRESULT GetRow([in] ULONG idx_tbl, [in] ULONG idx_row, [out] const BYTE *row);

    HRESULT GetColumn([in] ULONG idx_tbl, [in] ULONG idx_col, [in] ULONG idx_row, [out] ULONG *val);

    HRESULT GetString([in] ULONG idx, [out] const char **str);

    HRESULT GetBlob([in] ULONG idx, [out] ULONG *size, [out] const BYTE **blob);

    HRESULT GetGuid([in] ULONG idx, [out] const GUID **guid);

    HRESULT GetUserString([in] ULONG idx, [out] ULONG *size, [out] const BYTE **blob);

    HRESULT GetNextString([in] ULONG idx, [out] ULONG *next);

    HRESULT GetNextBlob([in] ULONG idx, [out] ULONG *next);

    HRESULT GetNextGuid([in] ULONG idx, [out] ULONG *next);

    HRESULT GetNextUserString([in] ULONG idx, [out] ULONG *next);
}
